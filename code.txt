# --------------- PART 1 (EXTRACTION OF RAR FOLDERS) -------------------

# Script By: Areeba Azhar (DevOps)
# Last Updated On: 13/12/2023

$base_and_destination_path = "C:\Users\areeba.azhar\Desktop\Areeba\Powershell\PS_Task_8\PS_Script"
$rar_folders = Get-ChildItem $base_and_destination_path -Filter "*.rar" 


foreach ($rar_folder in $rar_folders)
{
    $WinRar = "C:\Program Files\WinRAR\WinRAR.exe"
    #basename = name of folder without the extension
    $base_naming = $rar_folder.BaseName

    # this is the where i want to extract the rar folders
    $destination_folder = Join-Path $base_and_destination_path $base_naming 
    #Write-Host "dest" $destination_folder

    # if the folder is not present, then make one
    if (-not (Test-Path $destination_folder -PathType Container)) {

         New-Item $destination_folder -ItemType Directory

    }


    # FullName gives the entire directory
    $rar_file_path = $rar_folder.FullName
    # for extracting rar files
    & $WinRar x "$rar_file_path" "$destination_folder"




}
# pause is given so that once extraction completes, only then the next part of code will be executed
#Start-Sleep -Seconds 5

# -------------- PART 2 ---------------------

# Script By: Areeba Azhar (DevOps) 
# Last Updated On: 13/12/2023

$base_and_destination_path = "C:\Users\areeba.azhar\Desktop\Areeba\Powershell\PS_Task_8\PS_Script"

# $merged_path = 'C:\Users\areeba.azhar\Desktop\Areeba\Powershell\PS_Task_8\PS_Script\Merged'

$extracted_folders = Get-ChildItem $base_and_destination_path -Directory

# if there are multiple folders (more than 1)
if ( $extracted_folders.Count -gt 1 ) {

    # skipping the first folder
    for ($i = 1; $i -lt $extracted_folders.Count; $i++) {

        $source_folder = Join-Path $base_and_destination_path $extracted_folders[$i].Name

        $destination_folder = Join-Path $base_and_destination_path $extracted_folders[0].Name

        # excluding txt and sql files

        Get-ChildItem -Path $source_folder -File | Where-Object { $_.Extension -ne '.txt' -and $_.Extension -ne '.sql' } | ForEach-Object {

            $destination_path = Join-Path $destination_folder $_.Name
            Copy-Item -Path $_.FullName -Destination $destination_path -Force
            
        }

        # copying the content of destination folder to source folder
        #Copy-Item -Path "$source_folder\*" -Destination $destination_folder -Recurse -Force -Exclude *.txt *.sql

        # removing the current folder after merging
        #Remove-Item -Path $source_folder -Recurse -Force

    }

    # ------   merging 'files.txt' files --------
    $files_txt_destination = Join-Path $base_and_destination_path $extracted_folders[$i].Name "Files.txt"

    # skipping the first folder
    for ($i = 1; $i -lt $extracted_folders.Count; $i++) {

        $source_txt_file = Join-Path $source_folder "Files.txt"

        if (Test-Path $source_txt_file -PathType Leaf) {

            $source_txt_content = Get-Content -Path $source_txt_file -Raw

            $destination_txt_content = Get-Content -Path $files_txt_destination -Raw

            if ($source_txt_content -ne $destination_txt_content) {

                $merged_txt_content = $destination_txt_content + "'r'n" + $source_txt_content

                $merged_txt_content | Out-File -Append -FilePath $destination_txt_content

                Write-Host "Merging from $source_txt_content to $destination_txt_content has been completed"

            }

        }        
    }

    # ---------------- merging CureMD.sql files ---------------

    $destination_sql_file = Join-Path $base_and_destination_path $extracted_folders[$i].Name "CureMD.sql" 

    # skipping the first folder
    for ($i = 1; $i -lt $extracted_folders.Count; $i++) {

        $source_sql_file = Join-Path $source_folder "CureMD.sql"

        if (Test-Path $source_sql_file -PathType Leaf) {

            $source_sql_content =  Get-Content -Path $source_sql_file -Raw

            $destination_sql_content = Get-Content -Path $destination_sql_file -Raw

            $merged_sql_content = $destination_sql_content + "'r'nGO'r'n" + $source_sql_content + "'r'nGO'r'n"

            Add-Content -Path $destination_sql_content -Value $merged_sql_content

            Write-Host "Merging from $source_sql_content to $destination_sql_content has been completed"

            
        }

    }

    Write-Host "Merging process has been completed."

}

else {

    Write-Host "No need for merging since there is only one folder."

}


